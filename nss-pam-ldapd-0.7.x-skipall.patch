diff -up nss-pam-ldapd-0.7.5/common/tio.c.skipall nss-pam-ldapd-0.7.5/common/tio.c
--- nss-pam-ldapd-0.7.5/common/tio.c.skipall	2012-11-21 10:22:09.767556828 +0100
+++ nss-pam-ldapd-0.7.5/common/tio.c	2012-11-21 10:24:25.983599641 +0100
@@ -348,6 +348,12 @@ int tio_skip(TFILE *fp, size_t count)
   }
 }
 
+/* Read all available data from the stream and empty the read buffer. */
+int tio_skipall(TFILE *fp)
+{
+    return tio_skip(fp, 0);
+}
+
 /* the caller has assured us that we can write to the file descriptor
    and we give it a shot */
 static int tio_writebuf(TFILE *fp)
diff -up nss-pam-ldapd-0.7.5/common/tio.h.skipall nss-pam-ldapd-0.7.5/common/tio.h
--- nss-pam-ldapd-0.7.5/common/tio.h.skipall	2012-11-21 10:22:09.767556828 +0100
+++ nss-pam-ldapd-0.7.5/common/tio.h	2012-11-21 10:22:09.771556832 +0100
@@ -56,11 +56,12 @@ TFILE *tio_fdopen(int fd,struct timeval
 /* Read the specified number of bytes from the stream. */
 int tio_read(TFILE *fp,void *buf,size_t count);
 
-/* Read and discard the specified number of bytes from the stream.
-   If count is 0 reads and discards any data that can be read and empties
-   the read buffer. */
+/* Read and discard the specified number of bytes from the stream. */
 int tio_skip(TFILE *fp,size_t count);
 
+/* Read all available data from the stream and empty the read buffer. */
+int tio_skipall(TFILE *fp);
+
 /* Write the specified buffer to the stream. */
 int tio_write(TFILE *fp,const void *buf,size_t count);
 
diff -up nss-pam-ldapd-0.7.5/nss/common.h.skipall nss-pam-ldapd-0.7.5/nss/common.h
--- nss-pam-ldapd-0.7.5/nss/common.h.skipall	2012-11-21 10:22:09.768556829 +0100
+++ nss-pam-ldapd-0.7.5/nss/common.h	2012-11-21 10:22:09.772556833 +0100
@@ -96,7 +96,7 @@
   retv=readfn; \
   /* close socket and we're done */ \
   if ((retv==NSS_STATUS_SUCCESS)||(retv==NSS_STATUS_TRYAGAIN)) { \
-    (void)tio_skip(fp,0); /* read any buffered data */ \
+    (void)tio_skipall(fp); /* read any buffered data */ \
     (void)tio_close(fp); \
   } \
   return retv;
@@ -178,7 +178,7 @@
 #define NSS_ENDENT(fp) \
   if (fp!=NULL) \
   { \
-    (void)tio_skip(fp,0); /* read any buffered data */ \
+    (void)tio_skipall(fp); \
     (void)tio_close(fp); \
     fp=NULL; \
   } \
