diff -up nss-pam-ldapd-0.7.5/common/tio.c.poll_prereq nss-pam-ldapd-0.7.5/common/tio.c
--- nss-pam-ldapd-0.7.5/common/tio.c.poll_prereq	2015-11-12 17:26:03.281764923 +0100
+++ nss-pam-ldapd-0.7.5/common/tio.c	2015-11-12 17:27:31.126885400 +0100
@@ -308,10 +308,15 @@ int tio_read(TFILE *fp, void *buf, size_
 #endif /* SSIZE_MAX */
     rv=read(fp->fd,fp->readbuffer.buffer+fp->readbuffer.start,len);
     /* check for errors */
-    if ((rv==0)||((rv<0)&&(errno!=EINTR)&&(errno!=EAGAIN)))
+    if (rv==0)
+    {
+      errno=ECONNRESET;
+      return -1;
+    }
+    else if ((rv<0)&&(errno!=EINTR)&&(errno!=EAGAIN))
       return -1; /* something went wrong with the read */
-    /* skip the read part in the buffer */
-    fp->readbuffer.len=rv;
+    else if (rv>0)
+      fp->readbuffer.len=rv; /* skip the read part in the buffer */
 #ifdef DEBUG_TIO_STATS
     fp->bytesread+=rv;
 #endif /* DEBUG_TIO_STATS */
@@ -323,19 +328,15 @@ int tio_read(TFILE *fp, void *buf, size_
    the read buffer. */
 int tio_skip(TFILE *fp, size_t count)
 {
+  return tio_read(fp,NULL,count);
+}
+
+/* Read all available data from the stream and empty the read buffer. */
+int tio_skipall(TFILE *fp)
+{
+  struct pollfd fds[1];
   int rv;
   size_t len;
-
-  if (count==0)
-  {
-    return 0;
-  }
-
-  /* for simple cases just read */
-  if (count>0)
-  {
-    return tio_read(fp,NULL,count);
-  }
   /* clear the read buffer */
   fp->readbuffer.start=0;
   fp->readbuffer.len=0;
@@ -348,8 +349,19 @@ int tio_skip(TFILE *fp, size_t count)
 #endif /* SSIZE_MAX */
   while (1)
   {
+    /* see if any data is available */
+    fds[0].fd=fp->fd;
+    fds[0].events=POLLIN;
+    rv=poll(fds,1,skiptimeout);
+    /* check the poll() result */
+    if (rv==0)
+      return 0; /* no file descriptor ready */
+    if ((rv<0)&&((errno==EINTR)||(errno==EAGAIN)))
+      continue; /* interrupted, try again */
+    if (rv<0)
+      return -1; /* something went wrong */
+    /* read data from the stream */
     rv=read(fp->fd,fp->readbuffer.buffer,len);
-    /* check for errors */
     if (rv==0)
       return 0; /* end-of-file */
     if ((rv<0)&&(errno==EWOULDBLOCK))
@@ -359,12 +371,6 @@ int tio_skip(TFILE *fp, size_t count)
   }
 }
 
-/* Read all available data from the stream and empty the read buffer. */
-int tio_skipall(TFILE *fp)
-{
-    return tio_skip(fp, -1);
-}
-
 /* the caller has assured us that we can write to the file descriptor
    and we give it a shot */
 static int tio_writebuf(TFILE *fp)
